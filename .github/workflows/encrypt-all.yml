name: encrypt-all

on:
  workflow_dispatch:
    inputs:
      secret:
        description: 'Secret in plain-text'
        type: string

jobs:
  encrypt-secret:
    runs-on: ubuntu-latest
    env:
      JAR_URL: 'https://docs.mulesoft.com/mule-runtime/4.4/_attachments/secure-properties-tool.jar'


    steps:

      - name: Add mask
        run: |
          SECRET=$((${{ github.event.inputs.secret }}))
          echo "SECRET=$SECRET"
          echo "::add-mask::$SECRET"
        
      - name: Download encryption tool
        run: |
          echo "Downloading secure-properties-tool.jar from MuleSoft website..."
          curl -s $JAR_URL -o secure-properties-tool.jar
          chmod +x secure-properties-tool.jar
      
      - name: Encrypt secret
        run: |
          PLAINTEXT_SECRET=${{ github.event.inputs.secret }}          
          ENCRYPTION_KEY_LOCAL=${{ secrets.ENCRYPTION_KEY_LOCAL }}
          ENCRYPTION_KEY_NONPROD=${{ secrets.ENCRYPTION_KEY_NONPROD }}
          ENCRYPTION_KEY_PROD=${{ secrets.ENCRYPTION_KEY_PROD }}
          LOCAL_ENCRYPTED_SECRET=$(java -cp secure-properties-tool.jar com.mulesoft.tools.SecurePropertiesTool string encrypt AES CBC $ENCRYPTION_KEY_LOCAL $PLAINTEXT_SECRET)
          NONPROD_ENCRYPTED_SECRET=$(java -cp secure-properties-tool.jar com.mulesoft.tools.SecurePropertiesTool string encrypt AES CBC $ENCRYPTION_KEY_NONPROD $PLAINTEXT_SECRET)
          PROD_ENCRYPTED_SECRET=$(java -cp secure-properties-tool.jar com.mulesoft.tools.SecurePropertiesTool string encrypt AES CBC $ENCRYPTION_KEY_PROD $PLAINTEXT_SECRET)
          
          echo "Encrypted values"
          echo "---------------------------------------------------"
          echo "Local:    $LOCAL_ENCRYPTED_SECRET"
          echo "Non-Prod: $NONPROD_ENCRYPTED_SECRET"
          echo "Prod:     $PROD_ENCRYPTED_SECRET"
